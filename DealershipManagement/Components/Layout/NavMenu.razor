@inject NavigationManager NavigationManager
@inject CustomAuthenticationStateProvider AuthenticationStateProvider
@inject IJSRuntime JSRuntime

<input type="checkbox" title="Navigation menu" class="navbar-toggler" id="navbar-toggler">

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Dealership Management</a>
        <label for="navbar-toggler" class="navbar-toggler-label">
            <span class="navbar-toggler-icon"></span>
        </label>
    </div>
</div>

<div class="nav-scrollable">
    <nav class="flex-column">
        <div class="nav-item flex-column" style="width:100%;">
            <a class="nav-link @(NavigationManager.Uri == NavigationManager.BaseUri ? "active" : "")" href="">
                <span class="bi bi-house-door-fill-nav-menu"></span> Home
            </a>
        </div>
        <div class="nav-item flex-column" style="width:100%;">
            <a class="nav-link @(NavigationManager.Uri.Contains("/cars") ? "active" : "")" href="cars">
                <span class="bi bi-list-nested-nav-menu"></span> Cars
            </a>
        </div>
        <div class="nav-item flex-column" style="width:100%;">
            <a class="nav-link @(NavigationManager.Uri.Contains("/search") ? "active" : "")" href="search">
                <span class="bi bi-search-nav-menu"></span> Search
            </a>
        </div>
        <div class="nav-item flex-column" style="width:100%;">
            <a class="nav-link @(NavigationManager.Uri.Contains("/about") ? "active" : "")" href="about">
                <span class="bi bi-info-circle-nav-menu"></span> About Us
            </a>
        </div>
        
       @*  @if (isAuthenticated)
        {
            <div class="nav-item flex-column" style="width:100%;">
                <a class="nav-link @(NavigationManager.Uri.Contains("/logout") ? "active" : "")" href="logout">
                    <span class="bi bi-box-arrow-right"></span> Logout
                </a>
            </div>
        }
        else
        {
            <div class="nav-item flex-column" style="width:100%;">
                <a class="nav-link @(NavigationManager.Uri.Contains("/login") ? "active" : "")" href="login">
                    <span class="bi bi-box-arrow-in-right"></span> Login
                </a>
            </div>
        } *@
    </nav>
</div>

@code {
    private bool isAuthenticated = false;
    private string? username;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        isAuthenticated = authState.User.Identity?.IsAuthenticated ?? false;
        username = authState.User.Identity?.Name;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Check for cookie-based authentication after first render
            if (!isAuthenticated)
            {
                try
                {
                    var cookieUser = await JSRuntime.InvokeAsync<string>("auth.getAuthCookie");
                    if (!string.IsNullOrEmpty(cookieUser))
                    {
                        isAuthenticated = true;
                        username = cookieUser;
                        StateHasChanged(); // Trigger a re-render to update the UI
                    }
                }
                catch (Exception)
                {
                    // JavaScript interop failed, continue with server-side authentication only
                }
            }
        }
    }
}

